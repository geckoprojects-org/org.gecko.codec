<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="codecinfo" nsURI="https://geckoprojects.org/codec/info/1.0"
    nsPrefix="ci">
  <eAnnotations source="Version">
    <details key="value" value="1.0"/>
  </eAnnotations>
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="complianceLevel" value="17.0"/>
    <details key="basePackage" value="org.gecko.codec.info"/>
    <details key="fileExtensions" value="codecinfo"/>
    <details key="oSGiCompatible" value="true"/>
    <details key="resource" value="XMI"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="PackageCodecInfo">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        iD="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ePackage" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EPackage"
        eKeys="platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EPackage/nsURI"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subPackageCodecInfo" upperBound="-1"
        eType="#//PackageCodecInfo" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="eClassCodecInfo" upperBound="-1"
        eType="#//EClassCodecInfo" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EClassCodecInfo">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        iD="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="classifier" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClassifier"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="identityInfo" eType="#//IdentityInfo"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeInfo" eType="#//TypeInfo"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureInfo" upperBound="-1"
        eType="#//FeatureCodecInfo" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referenceInfo" upperBound="-1"
        eType="#//ReferenceCodecInfo" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operationInfo" upperBound="-1"
        eType="#//OperationCodecInfo" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureCodecInfo">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="features" upperBound="-1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//ETypedElement"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueReaderName" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        defaultValueLiteral="DEFAULT"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueWriterName" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        defaultValueLiteral="DEFAULT"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//InfoType"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This is the field name to be used for serialization. Can be set in the model through the http:///org/eclipse/emf/ecore/util/ExtendedMetaData name annotation. If EXTENDED_META_DATA module option is enabled, this will be used, otherwise the field name will be used."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignore" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to true, the EStructuralFeature marked with that will not be serialized."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TypeInfo" eSuperTypes="#//FeatureCodecInfo">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="typeStrategy" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This supports the possibility of setting a strategy for type serialization, e.g. if the URI of the class should be used as type, or the class name, or another value."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to false, the type information of the EClassifier with such a TypeInfo object will not be serialized, unless this property is then overwritten at a later point."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IdentityInfo" eSuperTypes="#//FeatureCodecInfo">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="idStrategy" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This supports the possibility of setting a strategy for id field determination, based on model annotations. For instance, an id field could be the combination of two model fields, and this should be marked in the model."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="idSeparator" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        defaultValueLiteral=".">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This supports the possibility of setting an id as a combination of multiple fields. The idSeparator property indicates the separator to be used when building the id field."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="idOrder" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This supports the possibility of setting an id as a combination of multiple fields. The idOrder defines the position of the fields to be used when building the id."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceCodecInfo" eSuperTypes="#//FeatureCodecInfo">
    <eStructuralFeatures xsi:type="ecore:EReference" name="eReferences" upperBound="-1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EReference"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="get" value="return &lt;%org.eclipse.emf.common.util.ECollections%>.asEList(getFeatures().stream().filter(f->f instanceof EReference).map(EReference.class::cast).collect(&lt;%java.util.stream.Collectors%>.toList()));"/>
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeCodecInfo" eSuperTypes="#//FeatureCodecInfo">
    <eStructuralFeatures xsi:type="ecore:EReference" name="eAttributes" upperBound="-1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EAttribute"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="get" value="return &lt;%org.eclipse.emf.common.util.ECollections%>.asEList(getFeatures().stream().filter(f->f instanceof EAttribute).map(EAttribute.class::cast).collect(&lt;%java.util.stream.Collectors%>.toList()));"/>
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OperationCodecInfo" eSuperTypes="#//FeatureCodecInfo">
    <eStructuralFeatures xsi:type="ecore:EReference" name="eOperations" upperBound="-1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EOperation"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="get" value="return &lt;%org.eclipse.emf.common.util.ECollections%>.asEList(getFeatures().stream().filter(f->f instanceof EOperation).map(EOperation.class::cast).collect(&lt;%java.util.stream.Collectors%>.toList()));"/>
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="InfoType">
    <eLiterals name="IDENTITY" literal="IDENTITY"/>
    <eLiterals name="TYPE" value="1" literal="TYPE"/>
    <eLiterals name="FEATURE" value="2"/>
    <eLiterals name="REFERENCE" value="3" literal="REFERENCE"/>
    <eLiterals name="OBJECT" value="4"/>
    <eLiterals name="OPERATION" value="5"/>
    <eLiterals name="OTHER" value="10"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CodecValueReader" abstract="true" interface="true">
    <eTypeParameters name="V"/>
    <eTypeParameters name="T"/>
    <eOperations name="readValue">
      <eGenericType eTypeParameter="#//CodecValueReader/T"/>
      <eParameters name="value" lowerBound="1">
        <eGenericType eTypeParameter="#//CodecValueReader/V"/>
      </eParameters>
      <eParameters name="context" lowerBound="1" eType="#//DeserializationContext"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        changeable="false" iD="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CodecValueWriter" abstract="true" interface="true">
    <eTypeParameters name="T"/>
    <eTypeParameters name="V"/>
    <eOperations name="writeValue">
      <eGenericType eTypeParameter="#//CodecValueWriter/V"/>
      <eParameters name="value" lowerBound="1">
        <eGenericType eTypeParameter="#//CodecValueWriter/T"/>
      </eParameters>
      <eParameters name="provider" lowerBound="1" eType="#//SerializerProvider"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        changeable="false" iD="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="SerializerProvider" instanceClassName="com.fasterxml.jackson.databind.SerializerProvider"/>
  <eClassifiers xsi:type="ecore:EClass" name="CodecInfoHolder">
    <eOperations name="getReaderByName" eType="#//CodecValueReader">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getReaders().stream().filter(r -> r.getName() == readerName).findFirst().orElse(null);"/>
      </eAnnotations>
      <eParameters name="readerName" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    </eOperations>
    <eOperations name="getWriterByName" eType="#//CodecValueWriter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getWriters().stream().filter(w -> w.getName() == writerName).findFirst().orElse(null);"/>
      </eAnnotations>
      <eParameters name="writerName" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="infoType" lowerBound="1"
        eType="#//InfoType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="readers" upperBound="-1"
        eType="#//CodecValueReader" transient="true" resolveProxies="false" eKeys="#//CodecValueReader/name"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="writers" upperBound="-1"
        eType="#//CodecValueWriter" transient="true" resolveProxies="false" eKeys="#//CodecValueWriter/name"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SampleValueReader" abstract="true" interface="true">
    <eTypeParameters name="V"/>
    <eTypeParameters name="T"/>
    <eOperations name="readValue">
      <eGenericType eTypeParameter="#//SampleValueReader/T"/>
      <eParameters name="value" lowerBound="1">
        <eGenericType eTypeParameter="#//SampleValueReader/V"/>
      </eParameters>
      <eParameters name="context" lowerBound="1" eType="#//DeserializationContext"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        changeable="false" iD="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="DeserializationContext" instanceClassName="com.fasterxml.jackson.databind.DeserializationContext"/>
</ecore:EPackage>
